<!DOCTYPE html>
<html lang="en"><head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            background: linear-gradient(120deg, #3498db, #8e44ad);
            color: #fff;
            overflow: hidden;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background: linear-gradient(120deg, #3498db, #8e44ad);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            text-align: center;
        }

        h1 {
            margin-bottom: 20px;
            color: #ecf0f1;
        }

        .task-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        input {
            padding: 10px;
            width: 70%;
        }

        button {
            padding: 10px 15px;
            background-color: #fff;
            color: #3498db;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #2980b9;
            color: #fff;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin: 10px 0;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .completed {
            text-decoration: line-through;
            color: #95a5a6;
        }
    </style>
<style type="text/css" id="operaUserStyle"></style></head>
<body>

<div class="container">
    <h1>To-Do List</h1>
    <div class="task-container">
        <input type="text" id="taskInput" placeholder="Add a new task...">
        <button onclick="addTask()">Add</button>
    </div>
    <ul id="taskList"><li>
                <span class="">eee</span>
                <button onclick="completeTask(this)">Complete</button>
                <button onclick="removeTask(this)">Remove</button>
            </li></ul>
</div>

<script>
    document.addEventListener("DOMContentLoaded", loadTasks);
    function addTask() {
        const taskInput = document.getElementById("taskInput");
        const taskList = document.getElementById("taskList");
        if (taskInput.value.trim() !== "") {
            const taskText = taskInput.value.trim();
            const li = document.createElement("li");
            li.innerHTML = `
                <span>${taskText}</span>
                <button onclick="completeTask(this)">Complete</button>
                <button onclick="removeTask(this)">Remove</button>
            `;
            taskList.appendChild(li);
            saveTasks();
            taskInput.value = "";
        }
    }
    function completeTask(button) {
        const taskText = button.parentElement.querySelector("span");
        taskText.classList.toggle("completed");
        saveTasks();
    }
    function removeTask(button) {
        const li = button.parentElement;
        li.remove();
        saveTasks();
    }
    function saveTasks() {
        const tasks = [];
        const taskList = document.getElementById("taskList");
        const taskItems = taskList.getElementsByTagName("li");
        for (const taskItem of taskItems) {
            const taskText = taskItem.querySelector("span").textContent;
            const isCompleted = taskItem.querySelector("span").classList.contains("completed");
            tasks.push({ text: taskText, completed: isCompleted });
        }
        localStorage.setItem("tasks", JSON.stringify(tasks));
    }
    function loadTasks() {
        const taskList = document.getElementById("taskList");
        const tasks = JSON.parse(localStorage.getItem("tasks")) || [];
        for (const task of tasks) {
            const li = document.createElement("li");
            li.innerHTML = `
                <span class="${task.completed ? 'completed' : ''}">${task.text}</span>
                <button onclick="completeTask(this)">Complete</button>
                <button onclick="removeTask(this)">Remove</button>
            `;
            taskList.appendChild(li);
        }
    }
</script>


</body></html>
